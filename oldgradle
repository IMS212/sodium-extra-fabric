buildscript {
    dependencies {
        classpath "de.guntram.mcmod:crowdin-translate:${project.crowdin_translate}"
    }
    repositories {
        maven {
            name = 'CrowdinTranslate source'
            url = "https://minecraft.guntram.de/maven/"
        }
    }
}

plugins {
    id 'signing'
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'
crowdintranslate.crowdinProjectName = 'sodium-extra'
crowdintranslate.minecraftProjectName = 'sodium-extra'
crowdintranslate.verbose = false

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = createVersionString()
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/sodium-extra.accesswidener")
}

repositories {
    maven { 
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://maven.flashyreese.me/releases"
    }
    maven {
        url "https://maven.flashyreese.me/snapshots"
    }
    maven {
        url = "https://minecraft.guntram.de/maven/"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //modImplementation "me.jellysquid.mods:sodium:0.5.9-snapshot+mc1.21-pre3-build.9"
    modImplementation "maven.modrinth:sodium:${project.sodium_version}"
    /*modImplementation("me.flashyreese.mods:reeses-sodium-options:${project.reeses_sodium_options}") {
        exclude group: "net.coderbot.iris_mc1_19", module: "iris"
    }*/
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    // Currently using altrisi/CaffeineConfig until it is officially available through CaffeineMC's maven repository
    // Todo: Use https://github.com/CaffeineMC/mixin-config when available
    include(modImplementation("net.caffeinemc:CaffeineConfig:1.3.0+1.17"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

build {
    dependsOn downloadTranslations
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from "LICENSE.txt"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        maven {
            name = "FlashyReeseReleases"
            url = "https://maven.flashyreese.me/releases"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name = "FlashyReeseSnapshots"
            url = "https://maven.flashyreese.me/snapshots"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

def createVersionString() {
    def builder = new StringBuilder()

    def isReleaseBuild = project.hasProperty("build.release")
    def buildId = System.getenv("GITHUB_RUN_NUMBER")

    if (isReleaseBuild) {
        builder.append(mod_version)
    } else {
        builder.append(mod_version.split('-')[0])
        builder.append("-snapshot")
    }

    builder.append("+mc").append(minecraft_version)

    if (!isReleaseBuild) {
        if (buildId != null) {
            builder.append("-build.${buildId}")
        } else {
            builder.append("-local")
        }
    }

    return builder.toString()
}
